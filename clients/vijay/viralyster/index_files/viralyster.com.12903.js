/*marketgid.comV3.0*/ if(!this.MarketGidJSON){ MarketGidJSON=function(){function f(n){return n<10?'0'+n:n;} Date.prototype.toJSON=function(){return this.getUTCFullYear()+'-'+ f(this.getUTCMonth()+1)+'-'+ f(this.getUTCDate())+'T'+ f(this.getUTCHours())+':'+ f(this.getUTCMinutes())+':'+ f(this.getUTCSeconds())+'Z';};var m={'\b':'\\b','\t':'\\t','\n':'\\n','\f':'\\f','\r':'\\r','"':'\\"','\\':'\\\\'};function stringify(value,whitelist){var a,i,k,l,r=/["\\\x00-\x1f\x7f-\x9f]/g,v;switch(typeof value){case'string':return r.test(value)?'"'+value.replace(r,function(a){var c=m[a];if(c){return c;} c=a.charCodeAt();return'\\u00'+Math.floor(c/16).toString(16)+ (c%16).toString(16);})+'"':'"'+value+'"';case'number':return isFinite(value)?String(value):'null';case'boolean':case'null':return String(value);case'object':if(!value){return'null';} if(typeof value.toJSON==='function'){return stringify(value.toJSON());} a=[];if(typeof value.length==='number'&&!(value.propertyIsEnumerable('length'))){l=value.length;for(i=0;i<l;i+=1){a.push(stringify(value[i],whitelist)||'null');} return'['+a.join(',')+']';} if(whitelist){l=whitelist.length;for(i=0;i<l;i+=1){k=whitelist[i];if(typeof k==='string'){v=stringify(value[k],whitelist);if(v){a.push(stringify(k)+':'+v);}}}}else{for(k in value){if(typeof k==='string'){v=stringify(value[k],whitelist);if(v){a.push(stringify(k)+':'+v);}}}} return'{'+a.join(',')+'}';}} return{stringify:stringify,parse:function(text,filter){var j;function walk(k,v){var i,n;if(v&&typeof v==='object'){for(i in v){if(Object.prototype.hasOwnProperty.apply(v,[i])){n=walk(i,v[i]);if(n!==undefined){v[i]=n;}}}} return filter(k,v);} if(/^[\],:{}\s]*$/.test(text.replace(/\\./g,'@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,']').replace(/(?:^|:|,)(?:\s*\[)+/g,''))){j=eval('('+text+')');return typeof filter==='function'?walk('',j):j;} throw new SyntaxError('parseJSON');}};}();} MarketGidBaseBlockC12903 = function(root_id, KX, fallback, containerId) { var self = this; this.KX = KX; this.root = this.KX.document.getElementById(root_id); this.containerId = containerId; this.FA = fallback; this.page = 1; this.iteration = 1; this.adlink = ''; this.template = ''; this.id = 12903; this.tickerShow = 0; this.XF = []; this.OW = {}; this.CO = {}; this.ZC = []; this.RO = []; this.SK = []; this.afterRenderItemHooks = []; this.SN = ""; this.UN = ""; this.FJ = 0; this.QU = {}; this.DZ = ""; this.FZ = ""; this.MK = []; this.crashStep = 0; this.loadedDefault = false; this.teaserHashes = {}; this.teaserData = {}; this.TT = 2; this.EL = 0; this.fakeMode = 0; this.requestParams = {}; this.infIds = []; this.RP = []; this.realIds = []; this.protocols = []; this.RP['news5238'] = 'ab'; this.YP = 'ab'; this.MK['news'] = "mgid.com"; this.MD = '5238'; this.UU = 'news'; this.infIds['news'] = '5238'; this.realIds['news'] = '5238'; this.protocols['news'] = '4'; this.RP['goods3816'] = 'ad'; this.YP['goods'] = 'ad'; this.MK['goods'] = "mgid.com"; this.MD = '3816'; this.UU = 'goods'; this.infIds['goods'] = '3816'; this.realIds['goods'] = '3816'; this.protocols['goods'] = '4'; this.BT = {}; this.QP = {}; this.BT.news = '<div class="mgbox"> '; this.QP.news = ' </div> </div> '; this.BT.goods = '<div class="mgbox"> '; this.QP.goods = ' </div> </div> '; this.PR = ''; this.LR = function(title,id,f_src,desc,mirror,n) { self.teaserData[n[6]] = n; self.teaserData[n[6]]['img'] = n[7]['i']; if (self.PR=='news') { mirror = mirror ? mirror : self.QVs[self.KY]; var PP = self.QVsImages[self.KY]; this.template+=' '; if ( this.iteration != 1){ this.template+='</div>'; } this.template+='<div class="mgline"> <div class="image-with-text"> <div class="mcimg"> <a target="_blank" href="'+(typeof(this.KX.MGClickTracking) != 'undefined' ? this.KX.MGClickTracking : "")+(this.KX.document.location.protocol.indexOf("http")!=-1?this.KX.document.location.protocol:"http:")+(typeof(n[7]['l']) == 'undefined' ? ('//'+mirror+'/pnews/'+id+'/i/5238/pp/'+this.iteration+'/'+this.page+'/?h=' + encodeURIComponent(this.teaserHashes[id])) : n[7]['l']) +'" ><img class="mcimg" width="200" height="200" src="'+n[7]['i']+'"></a> </div> <div class="text-elements"> <div class="mctitle"><a target="_blank" href="'+(typeof(this.KX.MGClickTracking) != 'undefined' ? this.KX.MGClickTracking : "")+(this.KX.document.location.protocol.indexOf("http")!=-1?this.KX.document.location.protocol:"http:")+(typeof(n[7]['l']) == 'undefined' ? ('//'+mirror+'/pnews/'+id+'/i/5238/pp/'+this.iteration+'/'+this.page+'/?h=' + encodeURIComponent(this.teaserHashes[id])) : n[7]['l']) +'">'+title+'</a></div> <div class="fake"> </div> <div class="mgtobottom"> </div> </div> </div> '; } else { self.teaserData[n[9]] = n; self.teaserData[n[9]]['img'] = n[10]['i']; n[7] = n[7].replace(".00", ""); n[8] = n[8].replace(".00", ""); mirror = self.QVs[self.KY]; var PP = self.QVsImages[self.KY]; this.template+=' '; if ( this.iteration != 1){ this.template+='</div>'; } this.template+='<div class="mgline"> <div class="image-with-text"> <div class="mcimg"> <a target="_blank" href="'+(typeof(this.KX.MGClickTracking) != 'undefined' ? this.KX.MGClickTracking : "")+(this.KX.document.location.protocol.indexOf("http")!=-1?this.KX.document.location.protocol:"http:")+(typeof(n[10]['l']) == 'undefined' ? ('//'+mirror+'/ghits/'+n[1]+'/i/3816/'+this.KY+'/pp/'+this.iteration+'/'+this.page+'/'+n[6]+'?h=' + encodeURIComponent(this.teaserHashes[n[1]])) : n[10]['l']) +'" ><img class="mcimg" width="200" height="200" src="'+n[10]['i']+'"></a> </div> <div class="text-elements"> <div class="mctitle"><a target="_blank" href="'+(typeof(this.KX.MGClickTracking) != 'undefined' ? this.KX.MGClickTracking : "")+(this.KX.document.location.protocol.indexOf("http")!=-1?this.KX.document.location.protocol:"http:")+(typeof(n[10]['l']) == 'undefined' ? ('//'+mirror+'/ghits/'+n[1]+'/i/3816/'+this.KY+'/pp/'+this.iteration+'/'+this.page+'/'+n[6]+'?h=' + encodeURIComponent(this.teaserHashes[n[1]])) : n[10]['l']) +'">'+((n[5] == '1')?('\u200d' + this.CP(n[3]) + '\u200d'):this.CP(n[3]))+'</a></div> <div class="fake"> </div> <div class="mgtobottom"> </div> </div> </div> '; } if (self.fakeMode == 0) { for (var i = 0; i < self.afterRenderItemHooks.length; i++) { self[self.afterRenderItemHooks[i]](n); } } self.iteration++; }; this.YT = function(str,limit) { if (str.length<=limit) return str; var word=new Array(); word=str.split(" "); var ret=word[0] + ' '; var test; for (i=1;i<word.length;i++){ test=ret+word[i]; if (test.length>limit) return ret+'...'; else ret+=word[i] + ' '; } return str; }; this.NY = function(str,limit){ var word=new Array(); var i; var ret=''; word=str.split(" "); for (i=0;i<word.length;i++){ if (word[i].length>limit && word[i].search(/&\w+;/)<0) ret+=word[i].substr(0,limit) + ' ' + word[i].substr(limit) + ' '; else ret+=word[i] + ' '; } return ret; }; this.CP = function(title) { if (this.PR=='news') { } else { } return title; }; this.FW = function(desc) { if (this.PR=='news') { } else { } return desc; }; this.isArray = function(o) { return Object.prototype.toString.call(o) === '[object Array]'; }; this.WU = function() { if (!this.FA && this.KX.document.getElementById("MarketGidPreloadC" + this.containerId)) { this.KX.document.getElementById("MarketGidPreloadC" + this.containerId).style.display = 'none'; } else if (this.FA && this.FJ == 0) { this.root.innerHTML = ""; } }; this.MarketGidLoadNews = function(json){ this.WU(); if (self.fakeMode == 0) { for (var i = 0; i < self.ZC.length; i++) { self[self.ZC[i]](); } } var i; this.template=''; if (this.isArray(json)){ if (json.length==0) { if (!this.forceShow) { this.blockType = this.blockType == 'news' ? 'goods' : 'news'; var type = this.blockType; var id = this.realIds[type]; this.blockId = id; this.subdomain = this.RP[type + id]; this.OW["mg_id"] = id; this.OW["mg_type"] = type; this.setCookie(); this.forceShow = true; this.MI(this.forceShow); } return; } for(i=0; i<json.length; i++){ var n=json[i]; if (n[5] !=='undefined') srcDom = n[5]; if (this.PR == 'news') { if (n[6] !=='undefined' && n[1] !== 'undefined') { this.teaserHashes[n[1]] = n[6]; } } else { if (n[9] !=='undefined' && n[1] !=='undefined') { this.teaserHashes[n[1]] = n[9]; } } if (this.isArray(n)){ if (!(n[1] in this.QU) && n[1]!='') { this.QU[n[1]]=1; this.LR(this.CP(n[3]),n[1],n[0],this.FW(n[4]),n[5],n); } else this.QU[n[1]]++; } } if(this.root && this.template){ if (this.FA && this.FJ==0) this.root.innerHTML = ""; this.root.innerHTML+= (this.FJ==0?this.UN:"") + this.DZ + this.BT[this.PR]+this.template+this.QP[this.PR] + this.FZ; } } else { if (this.root && this.FJ==0) { this.root.innerHTML=''; return; } } this.OW["page"] = this.page; this.OW['time'] = (new Date()).getTime(); this.setCookie(); var hrefs = this.root.getElementsByTagName("a"); for (var i = 0; i < hrefs.length; i++) { } if (this.PR=='news') { this.UY(' .mgresponsive {} .mgbox { padding: 0 !important; position: relative !important; text-align: center; vertical-align: top !important; margin:0 auto; border-style: solid; max-width: 1220px; min-width: 96px; transition: none !important; width: 620px; border-width: 0px; display: -ms-flexbox; display: -webkit-flex; display: flex; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-flex-wrap: wrap; -ms-flex-wrap: wrap; flex-wrap: wrap; line-height: 100% !important; } div.mcimg { padding: 0px; text-align: center; } img.mcimg { border-style: solid; border-width: 0px; width: 100% !important; height: auto !important; max-width: 200px; max-height: 200px; box-sizing: border-box; } .mctitle a, .mcdesc a { font-weight: bold; font-size: 12px; font-style: normal; text-decoration: none; color: #000000!important; font-family:Verdana,Geneva,sans-serif; } .mcdesc { display: none; text-align: center; } .mcdesc a { font-weight: normal; font-size: 11px; font-style: normal; font-decoration: none; color: #666666; font-family:Verdana,Geneva,sans-serif; } .mcdomain { text-align: center; } .mcdomain a { font-weight: normal; font-size: 10px; font-style: normal; text-decoration: none; color: #bbbbbb; font-family: Verdana,Geneva,sans-serif; padding: 4px; overflow: hidden; } .mgbox .text-elements { text-align: center; } div.mctitle { margin-top: 10px; } .mgline{ background: none repeat scroll 0 0; cursor: pointer; display:inline-block; _overflow:hidden; *zoom:1; *display:inline; vertical-align: top; min-width: 90px; padding: 0!important; border-style: solid; border-color: #ffffff; border-width: 0px; width: 31%; max-width: 31%; box-sizing: border-box; margin: 10px 1%; display: -ms-flexbox; display: -webkit-flex; display: flex; -webkit-flex-direction: column; -ms-flex-direction: column; flex-direction: column; word-wrap: break-word; } .mgline[max-width~="120px"] .mcdesc { display: none !important; } @supports not (flex-wrap: wrap) { .mgbox { display: block !important; } .mgline { display: inline-block !important; } } .text-elements a { text-decoration: none; } div.mcprice { text-align: center; } div.mcprice span { font-size: 7px; font-weight: bold; font-style: normal; color: #ffffff; } div.mcprice > span { text-decoration: none; } span.mcpriceold { text-decoration: line-through !important; } @media (max-width:480px) { .mgline{width:48% !important;margin:1% !important;max-width: 48% !important;} } div.mctitle { margin-top: 12px; } .mgline { position: relative; } .mgarrowbox { position: relative; background: #4555a7; width:55%; height:22px; margin:0px; border-color: #fff; border-left-color: #4555a7; display: inline-block; font-family: \'Open Sans\', sans-serif; } .mgarrowbox:after { left: 100%; top: 50%; border: solid transparent; content: " "; height: 0px; width: 0px; position: absolute; pointer-events: none; border-color: inherit; border-left-color: inherit; border-width: 11px; margin-top: -11px; } .mgbuybox { width: 40%; display: inline-block; text-align: right; font-weight:bold; font-family: \'Open Sans\', sans-serif; font-size: 12px; color: #666666; text-decoration: underline; } .text-elements .mctitle { line-height: 1.3 !important; } .mcdesc { margin-top: 4px; margin-bottom: 5px; } .mcdesc a { line-height: 1.5 !important; } div.mcprice { margin-top:5px; line-height: 7px !important; } .mcprice span { line-height: 14px; } .mgline:hover .mctitle a { color: #4555a7; text-decoration: underline !important; } .mgtobottom { position: absolute; bottom: 0px; width: 100%; text-align: left; } .mgline .image-with-text { width: 100% !important; max-width: 200px; margin: 0 auto; } .mgline .mgtobottom { width: 100% !important; max-width: 200px; margin: 0 auto; } .mgline .fake { visibility: hidden; position: relative; } .mghead { color: #4555a7 !important; } .mcpriceold { float: left; padding-left: 5px; } .mcdiscount { display: none; } .mgline:hover .mcpriceold+.mcprice, .mgline:hover .mcpriceold { visibility: hidden; } .mgline:hover .mcdiscount { display: block; position: absolute; left: 0px; right: 0px; top: 5px; } .mgline[max-width~="120px"] .mgarrowbox { display: none !important; } .mgline[max-width~="120px"] .mgbuybox { display: none !important; } .mgline[max-width~="120px"] .mgbuybox { display: none !important; } .MarketGidDrawInformer .mgtobottom, .MarketGidDrawInformer .fake { display: none; }'); } else { this.UY(' .mgresponsive {} .mgbox { padding: 0 !important; position: relative !important; text-align: center; vertical-align: top !important; margin:0 auto; border-style: solid; max-width: 1220px; min-width: 96px; transition: none !important; width: 620px; border-width: 0px; display: -ms-flexbox; display: -webkit-flex; display: flex; -webkit-flex-direction: row; -ms-flex-direction: row; flex-direction: row; -webkit-flex-wrap: wrap; -ms-flex-wrap: wrap; flex-wrap: wrap; line-height: 100% !important; } div.mcimg { padding: 0px; text-align: center; } img.mcimg { border-style: solid; border-width: 0px; width: 100% !important; height: auto !important; max-width: 200px; max-height: 200px; box-sizing: border-box; } .mctitle a, .mcdesc a { font-weight: bold; font-size: 12px; font-style: normal; text-decoration: none; color: #000000!important; font-family:Verdana,Geneva,sans-serif; } .mcdesc { display: none; text-align: center; } .mcdesc a { font-weight: normal; font-size: 11px; font-style: normal; font-decoration: none; color: #666666; font-family:Verdana,Geneva,sans-serif; } .mcdomain { text-align: center; } .mcdomain a { font-weight: normal; font-size: 10px; font-style: normal; text-decoration: none; color: #bbbbbb; font-family: Verdana,Geneva,sans-serif; padding: 4px; overflow: hidden; } .mgbox .text-elements { text-align: center; } div.mctitle { margin-top: 10px; } .mgline{ background: none repeat scroll 0 0; cursor: pointer; display:inline-block; _overflow:hidden; *zoom:1; *display:inline; vertical-align: top; min-width: 90px; padding: 0!important; border-style: solid; border-color: #ffffff; border-width: 0px; width: 31%; max-width: 31%; box-sizing: border-box; margin: 10px 1%; display: -ms-flexbox; display: -webkit-flex; display: flex; -webkit-flex-direction: column; -ms-flex-direction: column; flex-direction: column; word-wrap: break-word; } .mgline[max-width~="120px"] .mcdesc { display: none !important; } @supports not (flex-wrap: wrap) { .mgbox { display: block !important; } .mgline { display: inline-block !important; } } .text-elements a { text-decoration: none; } div.mcprice { text-align: center; } div.mcprice span { font-size: 7px; font-weight: bold; font-style: normal; color: #ffffff; } div.mcprice > span { text-decoration: none; } span.mcpriceold { text-decoration: line-through !important; } @media (max-width:480px) { .mgline{width:48% !important;margin:1% !important;max-width: 48% !important;} } div.mctitle { margin-top: 12px; } .mgline { position: relative; } .mgarrowbox { position: relative; background: #4555a7; width:55%; height:22px; margin:0px; border-color: #fff; border-left-color: #4555a7; display: inline-block; font-family: \'Open Sans\', sans-serif; } .mgarrowbox:after { left: 100%; top: 50%; border: solid transparent; content: " "; height: 0px; width: 0px; position: absolute; pointer-events: none; border-color: inherit; border-left-color: inherit; border-width: 11px; margin-top: -11px; } .mgbuybox { width: 40%; display: inline-block; text-align: right; font-weight:bold; font-family: \'Open Sans\', sans-serif; font-size: 12px; color: #666666; text-decoration: underline; } .text-elements .mctitle { line-height: 1.3 !important; } .mcdesc { margin-top: 4px; margin-bottom: 5px; } .mcdesc a { line-height: 1.5 !important; } div.mcprice { margin-top:5px; line-height: 7px !important; } .mcprice span { line-height: 14px; } .mgline:hover .mctitle a { color: #4555a7; text-decoration: underline !important; } .mgtobottom { position: absolute; bottom: 0px; width: 100%; text-align: left; } .mgline .image-with-text { width: 100% !important; max-width: 200px; margin: 0 auto; } .mgline .mgtobottom { width: 100% !important; max-width: 200px; margin: 0 auto; } .mgline .fake { visibility: hidden; position: relative; } .mghead { color: #4555a7 !important; } .mcpriceold { float: left; padding-left: 5px; } .mcdiscount { display: none; } .mgline:hover .mcpriceold+.mcprice, .mgline:hover .mcpriceold { visibility: hidden; } .mgline:hover .mcdiscount { display: block; position: absolute; left: 0px; right: 0px; top: 5px; } .mgline[max-width~="120px"] .mgarrowbox { display: none !important; } .mgline[max-width~="120px"] .mgbuybox { display: none !important; } .mgline[max-width~="120px"] .mgbuybox { display: none !important; } .MarketGidDrawInformer .mgtobottom, .MarketGidDrawInformer .fake { display: none; }'); } this.FJ++; if (self.fakeMode == 0) { for (var i = 0; i < self.RO.length; i++) { self[self.RO[i]](); } } }; this.UQ = function() { var d = this.KX.document, w = this.KX, dE = 'documentElement', cH = 'clientHeight', cW = 'clientWidth', iH = 'innerHeight', iW = 'innerWidth', sH = 'scrollHeight', sW = 'scrollWidth', oH = 'offsetHeight', oW = 'offsetWidth', oL = 'offsetLeft', oT = 'offsetTop', sT = 'scrollTop', sL = 'scrollLeft'; if (w[iW]) { return {"c": w[iH], "s": w.pageYOffset}; } else if (d[dE] && d[dE][cW]) { return {"c": d[dE][cH], "s": d[dE][sT]}; } else if (d.body[cW]) { return {"c": d.body[cH], "s": d.body[sT]}; } return 0; }; this.MarketGidRedirectComposite = function() { if (arguments.length == 5) { var arr = arguments[4]; } else { var arr = arguments[0]; } if (self.crashWorkerTimeout) { clearTimeout(self.crashWorkerTimeout); } if (self.EL >= self.TT || self.crashStep == 2) { self.PR = self.blockType; self.MarketGidLoadNews(arr); } else { var rType = self.blockType == 'news' ? 'goods' : 'news'; var rId = self.realIds[rType]; if (self.RP[rType + rId]) { if (self.crashStep == 1) self.crashStep++; self.blockId = rId; self.blockType = rType; self.subdomain = self.RP[rType + rId]; self.OW["mg_id"] = rId; self.OW["mg_type"] = rType; self.setCookie(); self.SN = '//'+self.subdomain+'-'+self.blockType.substr(0,1)+'b.'+self.MK[self.blockType]+'/'+self.blockId+'/'; self.MI(); self.EL++; } } }; this.crashWorker = function() { if (MarketGidInfC12903.template == '' && !MarketGidInfC12903.loadedDefault) { MarketGidInfC12903.crashStep = 1; MarketGidInfC12903.MarketGidRedirectComposite([]); } }; this.init = function() { if (this.root) { this.getCookie(); var cookie = this.OW["page"]; this.XF = this.root.getElementsByTagName('a'); var pageOffset = (this.KX.MarketGidPageOffset ? parseInt(this.KX.MarketGidPageOffset) : 0); if(cookie!=null&&parseInt(cookie)<20&&parseInt(cookie)>0) this.page=parseInt(cookie)+1; else if (parseInt(cookie)>19||parseInt(cookie)<1) this.page=1+pageOffset; if ((new Date()).getTime() - (this.OW['time']!=undefined ? this.OW['time'] : 0) >= 6e5) this.page = 1+pageOffset; if (!this.page) this.page = 1+pageOffset; this.pageUnlim = this.page - 1; this.OW["page"] = this.page; this.setCookie(); if (!this.KX.document.cookie) { var dt = new Date(); this.page = dt.getSeconds()%20+1; } this.blockId = this.OW["mg_id"] ? this.OW["mg_id"] : this.MD; this.blockType = this.OW["mg_type"] ? this.OW["mg_type"] : this.UU; if (this.RP[this.blockType + this.blockId]) this.subdomain = this.RP[this.blockType + this.blockId]; else { this.subdomain = this.YP; this.blockId = this.MD; this.blockType = this.UU; } this.SN = '//'+this.subdomain+'-'+this.blockType.substr(0,1)+'b.'+this.MK[this.blockType]+'/'+this.blockId+'/'; for (var i=0; i<this.SK.length; i++) { this[this.SK[i]](); } } }; this.MI = function(forceShow, refresh) { var script = this.KX.document.createElement('script'); script.type = 'text/javascript'; script.charset = 'utf-8'; if (forceShow) { this.SN = '//'+this.subdomain+'-'+this.blockType.substr(0,1)+'b.'+this.MK[this.blockType]+'/fs/'+this.blockId+'/'; } script.src = this.SN + this.page; if (refresh) { self.requestParams.rsh = "rsh=1"; } if (this.KX.MGi != undefined) { self.requestParams.geo = "geo=" + this.KX.MGi; } self.requestParams.pv = "pv=" + this.protocols[this.blockType]; self.requestParams.cbuster = "cbuster=" + (this.KX.MG_CacheBuster ? this.KX.MG_CacheBuster : ((new Date().getTime()) + '' + Math.floor((Math.random() * 1000000000) + 1))); if (script.src.indexOf('?') == -1) { script.src += '?'; } else { script.src += '&'; } var params = []; for (var key in self.requestParams) { params.push(self.requestParams[key]); } if (params.length > 0) { script.src += params.join("&"); } (this.realRoot != undefined ? this.realRoot : this.root).parentNode.appendChild(script); }; this.UY = function(style) { var MGst=this.KX.document.createElement('style'); MGst.type = 'text/css'; (this.realRoot != undefined ? this.realRoot : this.root).parentNode.appendChild(MGst); style = style.replace(/((?:^|}|,)\W*)((?:\w+)?\.(?:mc|mg)[\-\w]+)/g, "$1" + this.getMainCssSelector() + " $2"); if (MGst.styleSheet) { MGst.styleSheet.cssText = style; } else {MGst.appendChild(this.KX.document.createTextNode(style))}; (this.realRoot != undefined ? this.realRoot : this.root).parentNode.appendChild(MGst); }; this.start = function() { if (self.root && self.FJ == 0) { self.MI(); } }; this.addEvent = function(elem, type, handler) { if (elem.addEventListener) { elem.addEventListener(type, handler, false) } else { elem.attachEvent('on' + type, handler) } }; this.getMainCssSelector = function() { return "#" + (this.realRoot ? this.realRoot.id : this.root.id); } }; var mgCanLoad12903 = false; var mgFallback12903 = false; if (document.getElementById("MG_ID")) mgCanLoad12903 = true; if (document.getElementById("MarketGidComposite12903")) { mgCanLoad12903 = true; mgFallback12903 = true; } if (mgCanLoad12903) { if (!mgFallback12903) { var rootId12903 = document.getElementById("MG_ID").innerHTML; var div12903 = parent.window.document.createElement('div'); div12903.id = "MarketGidComposite12903"; parent.window.document.getElementById("MarketGidScriptRootC" + rootId12903).appendChild(div12903); MarketGidInfC12903 = new MarketGidBaseBlockC12903("MarketGidComposite12903", parent.window, false, rootId12903); } else { MarketGidInfC12903 = new MarketGidBaseBlockC12903("MarketGidComposite12903", window, true, 0); } MarketGidCCookieBlock12903 = function() { this.storageName = "MarketGidStorage" + (this.KX.MarketGidPageOffset ? this.KX.MarketGidPageOffset : ""); this.LQ = function() { var matches = this.KX.document.cookie.match(new RegExp("(?:^|; )" + this.storageName + "=([^;]*)")); var res = {}; if (matches) { try { res = MarketGidJSON.parse(decodeURIComponent(matches[1])); } catch (e) {}; } return res; }; this.getCookie = function() { var value = this.LQ(); if (value["C12903"]!=undefined) { this.OW = value["C12903"]; } else this.OW = {}; if (value["0"]!=undefined) { this.CO = value["0"]; } else this.CO = {}; }; this.setCookie = function() { var totalCookie = this.LQ(); totalCookie["C12903"] = this.OW; totalCookie["0"] = this.CO; var value = encodeURIComponent(MarketGidJSON.stringify(totalCookie)); this.KX.document.cookie = this.storageName+"="+value+";path=/"; }; }; MarketGidCCookieBlock12903.call(MarketGidInfC12903); MarketGidCSubnetsBlock12903 = function() { var self = this; this.SK.push("DY"); this.KY = ""; this.QVs = {}; this.QVsImages = {}; this.QVsAdvert = {}; this.QVsAdLinkBlocks = {}; this.QVsUtm = {}; this.QVs['0'] = 'mgid.com'; this.QVsImages['0'] = 'mgid.com'; this.QVsAdvert['0'] = 'http://mgid.com/advertisers/?utm_source=widget&utm_medium=text&utm_campaign=add'; this.QVsAdLinkBlocks['0'] = '<div class="mgheader"><span class="mghead">%WIDGET_TITLE%</span><div class="mg_addad%id"><a href="http://mgid.com/advertisers%utm%id" target="_blank"> by <img src="//mgid.com/images/mgid_logo_mini_43x20.png" alt="Mgid" title="Mgid"></a></div></div><style>.mghead{font-weight:700;font-size:14px;text-transform:uppercase;text-align:left;font-family: "Open Sans", sans-serif;color:#4555a7;display:block;margin:0 0 0px 5px;float:left;}.mgheader{ display: table !Important; width: 100% !important;}div.mg_addad%id{text-align: right; opacity: 0.5;margin-right: 10px} div.mg_addad%id:hover{opacity: 1} div.mg_addad%id a{color: #000000; font:normal 10px Myriad Pro; text-decoration: none;} div.mg_addad%id img{margin-bottom: -5px; border:0px}</style>'; this.QVsUtm['0'] = '?utm_source=widget&utm_medium=text&utm_campaign=add&utm_content='; this.QVs['1'] = 'fem.mgid.com'; this.QVsImages['1'] = 'mgid.com'; this.QVsAdvert['1'] = ''; this.QVsAdLinkBlocks['1'] = '<div class="mg_addad%id"><a href="http://mgid.com/advertisers%utm%id" target="_blank"> by <img src="//mgid.com/images/mgid_logo_mini_43x20.png" alt="Mgid" title="Mgid"></a></div><style type="text/css">div.mg_addad%id{text-align: right; opacity: 0.5;} div.mg_addad%id:hover{opacity: 1} div.mg_addad%id a{color: #000000; font:normal 10px Myriad Pro; text-decoration: none;} div.mg_addad%id img{margin-bottom: -5px; border:0px}</style>'; this.QVsUtm['1'] = '?utm_source=widget_fem&utm_medium=text&utm_campaign=add&utm_content='; this.QVs['2'] = 'adskeeper.co.uk'; this.QVsImages['2'] = 'adskeeper.co.uk'; this.QVsAdvert['2'] = ''; this.QVsAdLinkBlocks['2'] = '<div class="mg_addad%id"><a href="http://mgid.com/advertisers%utm%id" target="_blank"> by <img src="//mgid.com/images/mgid_logo_mini_43x20.png" alt="Mgid" title="Mgid"></a></div><style type="text/css">div.mg_addad%id{text-align: right; opacity: 0.5;} div.mg_addad%id:hover{opacity: 1} div.mg_addad%id a{color: #000000; font:normal 10px Myriad Pro; text-decoration: none;} div.mg_addad%id img{margin-bottom: -5px; border:0px}</style>'; this.QVsUtm['2'] = '?utm_source=widget_adskeeper&utm_medium=text&utm_campaign=add&utm_content='; this.QVs['3'] = 'mgid.com'; this.QVsImages['3'] = 'mgid.com'; this.QVsAdvert['3'] = ''; this.QVsAdLinkBlocks['3'] = '<div class="mgheader"><span class="mghead">%WIDGET_TITLE%</span><div class="mg_addad%id"><a href="http://mgid.com/advertisers%utm%id" target="_blank"> by <img src="//mgid.com/images/mgid_logo_mini_43x20.png" alt="Mgid" title="Mgid"></a></div></div><style>.mghead{font-weight:700;font-size:14px;text-transform:uppercase;text-align:left;font-family: "Open Sans", sans-serif;color:#4555a7;display:block;margin:0 0 0px 5px;float:left;}.mgheader{ display: table !Important; width: 100% !important;}div.mg_addad%id{text-align: right; opacity: 0.5;margin-right: 10px} div.mg_addad%id:hover{opacity: 1} div.mg_addad%id a{color: #000000; font:normal 10px Myriad Pro; text-decoration: none;} div.mg_addad%id img{margin-bottom: -5px; border:0px}</style>'; this.QVsUtm['3'] = '?utm_source=widget&utm_medium=text&utm_campaign=add&utm_content='; this.SK.push("DY"); var informerData = []; informerData.push({"id": "5238", "etalonId": "0", "protocol": "4", "type": "News", "subnet": "0"}); informerData.push({"id": "3816", "etalonId": "0", "protocol": "4", "type": "Goods", "subnet": "0"}); this.DY = function() { for (var i = 0; i < informerData.length; i++) { var tickerId = informerData[i].etalonId != "0" && informerData[i].protocol == "4" ? informerData[i].etalonId : informerData[i].id; if ((informerData[i].subnet !== '1') ^ ('0' === '1')) { (function(type) { self.KX["MarketGidLoad" + type + tickerId] = function(json) { self.PR = type.toLowerCase(); self.KY = '0'; self["MarketGidLoadNews"](json); }; })(informerData[i].type); if (informerData[i].protocol == "4") { self.KX["MarketGidRedirectComposite" + tickerId] = function() { self.KY = '0'; self["MarketGidRedirectComposite"].apply(self, [].slice.call(arguments, 0)); }; } else { self.KX["MarketGidRedirectComposite12903"] = function() { self.KY = '0'; self["MarketGidRedirectComposite"].apply(self, [].slice.call(arguments, 0)); }; } } if ((informerData[i].subnet !== '1') ^ ('1' === '1')) { (function(type) { self.KX["MarketGidLoad" + type + tickerId] = function(json) { self.PR = type.toLowerCase(); self.KY = '1'; self["MarketGidLoadNews"](json); }; })(informerData[i].type); if (informerData[i].protocol == "4") { self.KX["MarketGidRedirectComposite" + tickerId] = function() { self.KY = '1'; self["MarketGidRedirectComposite"].apply(self, [].slice.call(arguments, 0)); }; } else { self.KX["MarketGidRedirectComposite12903"] = function() { self.KY = '1'; self["MarketGidRedirectComposite"].apply(self, [].slice.call(arguments, 0)); }; } } if ((informerData[i].subnet !== '1') ^ ('2' === '1')) { (function(type) { self.KX["AdskeeperLoad" + type + tickerId] = function(json) { self.PR = type.toLowerCase(); self.KY = '2'; self["MarketGidLoadNews"](json); }; })(informerData[i].type); if (informerData[i].protocol == "4") { self.KX["AdskeeperRedirectComposite" + tickerId] = function() { self.KY = '2'; self["MarketGidRedirectComposite"].apply(self, [].slice.call(arguments, 0)); }; } else { self.KX["AdskeeperRedirectComposite12903"] = function() { self.KY = '2'; self["MarketGidRedirectComposite"].apply(self, [].slice.call(arguments, 0)); }; } } if ((informerData[i].subnet !== '1') ^ ('3' === '1')) { (function(type) { self.KX["FeedboxLoad" + type + tickerId] = function(json) { self.PR = type.toLowerCase(); self.KY = '3'; self["MarketGidLoadNews"](json); }; })(informerData[i].type); if (informerData[i].protocol == "4") { self.KX["FeedboxRedirectComposite" + tickerId] = function() { self.KY = '3'; self["MarketGidRedirectComposite"].apply(self, [].slice.call(arguments, 0)); }; } else { self.KX["FeedboxRedirectComposite12903"] = function() { self.KY = '3'; self["MarketGidRedirectComposite"].apply(self, [].slice.call(arguments, 0)); }; } } } }; }; MarketGidCSubnetsBlock12903.call(MarketGidInfC12903); MarketGidCMgqBlock12903 = function() { var self = this; this.isLongCheck = false; this.SK.push("mgqInit"); this.mgqWorker = function() { for (var i = 0; i < self.KX._mgq.length; i++) { var el = self.KX._mgq[i]; if (typeof(self.KX[el[0]]) == 'function') { self.KX[el[0]].apply(self.KX, el.slice(1)); self.KX._mgq.splice(i, 1); } } if (!self.KX._mgqi) { self.KX._mgqi = self.KX.setInterval(function() { self.mgqWorker(); }, 5); } if (!self.isLongCheck) { if ((new Date()).getTime() - self.KX._mgqt > 10000) { self.isLongCheck = true; self.KX.clearInterval(self.KX._mgqi); self.KX._mgqi = self.KX.setInterval(function() { self.mgqWorker(); }, 100); } } }; this.mgqInit = function() { self.KX._mgq = self.KX._mgq || []; if (typeof(self.KX._mgqp) == 'undefined') { self.KX._mgqp = self.mgqWorker; self.KX._mgqt = (new Date()).getTime(); self.mgqWorker(); } }; }; MarketGidCMgqBlock12903.call(MarketGidInfC12903); MarketGidCAntifraudBlock12903 = function() { this.RO.push("KF"); this.SK.push("initAntiFraud"); this.DS = ""; this.YN = ""; this.CX = ""; this.SI = ""; this.QG = ""; this.DA = ""; this.SS = ""; this.BX = ""; this.initAntiFraud = function() { if (this.CO["svspr"]==undefined) { this.CX = this.XR(this.KX.document.referrer,500); this.CO["svspr"] = this.CX; this.setCookie(); } else this.CX = this.CO["svspr"]; if (this.CO["svsds"]!=undefined) { this.SI = this.CO["svsds"]; this.SI++; } else this.SI = 1; this.CO["svsds"] = this.SI; this.setCookie(); var D=new Date(); this.DS = D.getTime() + '12903' + Math.floor(Math.random()*100) + '' + (2*Math.floor(Math.random()*4)+1); this.BX = D.getTime(); if (this.CO["TejndEEDj"]==undefined) { this.CO["TejndEEDj"] = this.x64String(this.DS); this.setCookie(); } }; this.x64String = function(s) { s=s.toString(); s=unescape(encodeURIComponent(s)); var b64c='\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x24\x54\x55\x56\x57\x58\x59\x5a\x61\x62\x63\x64\x65\x2a\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x2b\x2f\x3d'; var b64e=''; var c1,c2,c3,c4,e1,e2,e3,e4; for (var i=0; i<s.length;) { c1=s.charCodeAt(i++); c2=2<<5; e1=c1>>(c2/32); c3=s.charCodeAt(i++); e2=((c1&3)<<(c2/16))|(c3>>(c2/16)); c4=s.charCodeAt(i++); e3=isNaN(c3)?c2:(((c3&15)<<(c2/32))|(c4>>(c2-58))); e4=isNaN(c4)?c2:(c4&(c2-1)); b64e+=b64c.charAt(e1)+b64c.charAt(e2)+b64c.charAt(e3)+b64c.charAt(e4); } return b64e; }; this.QT = function(n) { return n?Math.round(n).toString(16):''; }; this.XR = function(str,n){ return str.length > n ? str.substring(0,n) : str; }; this.backHref = function() { if (MarketGidInfC12903.QG && MarketGidInfC12903.DA) MarketGidInfC12903.DA['\x68\x72\x65\x66']=MarketGidInfC12903.QG; MarketGidInfC12903.SS=""; }; this.getCoordsElementOfPage = function(element) { var offsetLeft = 0, offsetTop = 0; do { offsetLeft += element.offsetLeft; offsetTop += element.offsetTop; } while (element = element.offsetParent); return {"x":offsetLeft, "y":offsetTop}; }; this.getCoordsClickOfPage = function(e) { var x = 0, y = 0; if (!e) e = this.KX.event; if (e.pageX || e.pageY) { x = e.pageX; y = e.pageY; } else if (e.clientX || e.clientY) { x = e.clientX + (this.KX.document.documentElement.scrollLeft || this.KX.document.body.scrollLeft) - this.KX.document.documentElement.clientLeft; y = e.clientY + (this.KX.document.documentElement.scrollTop || this.KX.document.body.scrollTop) - this.KX.document.documentElement.clientTop; } return {"x":x, "y":y}; }; this.LJ = function() { return window.navigator.javaEnabled() ? 1 : 0; }; this.PC = function() { var flashEnabled = 0; if (typeof(navigator.plugins)!="undefined" && typeof(navigator.plugins["Shockwave Flash"])=="object") { flashEnabled = 1; } else if (typeof window.ActiveXObject != "undefined") { try { if (new ActiveXObject("ShockwaveFlash.ShockwaveFlash")) { flashEnabled = 1; } } catch(e) {}; } return flashEnabled; }; this.addParams = function(event, link) { if (link.className && link.className.indexOf("mg_addad")>=0) return; var D=new Date(); var e=event||this.KX.event; var coordClickOfPage = this.getCoordsClickOfPage(e); var b=link.getBoundingClientRect(); var coordLinkOfPage = this.getCoordsElementOfPage(link); var d=this.KX.document; if (!(link.href.indexOf('pnews') != -1 || link.href.indexOf('ghits') != -1)) return; var MG_p=/pp\/([0-9]+)\/([0-9]+)\/(k\/)?(?:s\/\d+\/(?:n\/\d+\/(?:x\/\d+\/)?)?)?#k([0-9]+)\??(\S*)/; var MG_nn=MG_p.exec(link.href); this.QG=link.href; this.DA=link; if (MG_nn) link.href = link.href.replace(MG_p, 'pp/' + MG_nn[1] + '/' + MG_nn[2] + '/' +(MG_nn[3]?MG_nn[3]:'') + (MG_nn[5]?'?'+MG_nn[5]+'&':'?') + 'k=' + MG_nn[4] + 'f'); else { var index = link.href.indexOf('?k=12903f'); if (index != -1) { link.href = link.href.substr(0, index) + '?k=12903f'; } else { index = link.href.indexOf('&k=12903f'); if (index != -1) { link.href = link.href.substr(0, index) + '&k=12903f'; } else { index = link.href.indexOf('?'); if (index != -1) { link.href += '&k=12903f'; } } } } var DU = 0; if (this.KX.opera) DU+=1; if (this.KX.opera&&this.KX.opera.buildNumber) DU+=2; if (this.KX.document.all||this.KX.MSStream) DU+=4; if (!this.KX.btoa||this.KX.navigator.msPointerEnabled) DU+=8; if (this.KX.chrome) DU+=16; if (this.KX.mozInnerScreenX!=undefined) DU+=32; if (!this.KX.external) DU+=64; var JQ=''; for (var i=1;i<=Math.ceil((DU+1)/68)*31;i++) { if((i%26==0)||((i%26==6)&&(((i%26)+5)%11==0)))continue; JQ+=(i==1?'':String.fromCharCode(102))+String.fromCharCode(96+(i%26))+String.fromCharCode(83); var BZ=''; if(i>31)break; switch(i){ case 1:BZ=this.DS;break; case 2:BZ=this.QT(b.bottom);break; case 3:BZ=this.QT(this.BX);break; case 4:BZ=this.QT(D.getTime());break; case 5:BZ=this.QT(d.body.clientheight);break; case 7:BZ=this.QT(e.clientX);break; case 8:BZ=this.QT(e.clientY);break; case 9:BZ=this.QT(b.left);break; case 11:BZ=this.QT(b.top);break; case 12:BZ=this.QT(d.body.clientheight-e.clientY);break; case 13:BZ=this.QT(b.right-b.left);break; case 14:BZ=this.QT(b.bottom-b.top);break; case 15:BZ=this.SS;break; case 16:BZ=this.QT(e.clientY);break; case 17:BZ=this.QT(DU);break; case 18:BZ=this.QT(link['\x64\x61\x74\x61\x2d\x72\x65\x6C']);break; case 19:BZ=this.XR(d.location.href,500);break; case 20:BZ=this.XR(d.referrer,500);break; case 21:BZ=this.CX;break; case 22:BZ=this.QT(this.SI);break; case 23:BZ=this.QT(coordClickOfPage.x);break; case 24:BZ=this.QT(coordClickOfPage.y);break; case 25:BZ=this.QT(coordLinkOfPage.x);break; case 27:BZ=this.QT(coordLinkOfPage.y);break; case 28:BZ=this.QT(this.LJ());break; case 29:BZ=this.QT(this.PC());break; case 30:BZ=this.QT(window.screen.width);break; case 31:BZ=this.QT(window.screen.height);break; } JQ+=this.x64String(BZ); } link['\x64\x61\x74\x61\x2d\x72\x65\x6C']=''; link['\x68\x72\x65\x66']=link['\x68\x72\x65\x66']+encodeURIComponent(JQ); }; this.linkClick = function(event) { MarketGidInfC12903.addParams(event, this); MarketGidInfC12903.KX.setTimeout(MarketGidInfC12903.backHref,100); return true; }; this.linkMouseOver = function(event) { MarketGidInfC12903.addParams(event, this); var v=parseInt(this['\x64\x61\x74\x61\x2d\x72\x65\x6C'])?parseInt(this['\x64\x61\x74\x61\x2d\x72\x65\x6C']):0; if (v%2!=1) this['\x64\x61\x74\x61\x2d\x72\x65\x6C']=v+1; }; this.YG = function(event) { var v=parseInt(this['\x64\x61\x74\x61\x2d\x72\x65\x6C'])?parseInt(this['\x64\x61\x74\x61\x2d\x72\x65\x6C']):0; if ((v>>1)%2!=1) this['\x64\x61\x74\x61\x2d\x72\x65\x6C']=v+2; }; this.KF = function() { if (this.root) { this.XF = this.root.getElementsByTagName('a'); } for (var MG_l in this.XF) { this.XF[MG_l].onmouseup = this.linkClick; this.XF[MG_l].onmouseover = this.linkMouseOver; this.XF[MG_l].onmousemove = this.YG; } }; }; MarketGidCAntifraudBlock12903.call(MarketGidInfC12903); MarketGidCResponsiveBlock12903 = function() { var self = this; self.RO.push("responsiveInit"); self.responsiveInit = function() { self.ElementQueries.init(); self.helpIE(self.root); if (!self.fakeMode) { self.fixPrices(); setTimeout(function() { self.fixFlexbox(); }, 100); } }; self.fixElementPrice = function(element) { var priceArray = element.getElementsByClassName("mcpriceouter"); for (var i = 0; i < priceArray.length; i++) { var parent = priceArray[i].parentNode; var oldPriceArray = parent.getElementsByClassName("mcpriceold"); if (priceArray[i].getBoundingClientRect()['bottom'] >= parent.getBoundingClientRect()['bottom']) { for (var j = 0; j < oldPriceArray.length; j++) { oldPriceArray[j].style.display = 'none'; } } else { for (var j = 0; j < oldPriceArray.length; j++) { oldPriceArray[j].style.display = 'inline-block'; if (priceArray[i].getBoundingClientRect()['bottom'] >= parent.getBoundingClientRect()['bottom']) { oldPriceArray[j].style.display = 'none'; } } } } }; self.fixPrices = function() { var elements = self.root.getElementsByClassName("mgline"); for (var i = 0; i < elements.length; i++) { (function(element) { self.fixElementPrice(element); element.resizeSensor = new self.ResizeSensor(element, function() { self.fixElementPrice(element); }); })(elements[i]); } }; self.fixFlexbox = function() { var s = self.KX.document.body || self.KX.document.documentElement, s = s.style; if (s.webkitFlexWrap == '' || s.msFlexWrap == '' || s.flexWrap == '') return true; var elements = self.root.getElementsByClassName("mgline"); for (var i = 0; i < elements.length; i++) { elements[i].style.height = "auto"; } setTimeout(function() { var maxH = 0; for (var i = 0; i < elements.length; i++) { var rect = elements[i].getBoundingClientRect(); var elH = rect.bottom - rect.top; if (elH > maxH) { maxH = elH; } } if (elH != 0) { for (var i = 0; i < elements.length; i++) { elements[i].style.height = maxH + "px"; } } self.fixImages(); }, 0); }; self.fixImages = function() { setTimeout(function() { var needToRefresh = false; var els = self.root.getElementsByClassName("mcimg"); for (var i = 0; i < els.length; i++) { if (els[i].tagName == "DIV") { var rect = els[i].getBoundingClientRect(); if (rect.bottom - rect.top <= 25) { needToRefresh = true; els[i].style.display = "none"; (function(el) { setTimeout(function() { el.style.display = "block"; }, 0); })(els[i]); } } } if (needToRefresh) { self.fixFlexbox(); } }, 200); }; self.helpIE = function(el) { if (el.getElementsByClassName == undefined) { el.getElementsByClassName = function(cl) { var retnode = []; var myclass = new RegExp('\\b'+cl+'\\b'); var elem = this.getElementsByTagName('*'); for (var i = 0; i < elem.length; i++) { var classes = elem[i].className; if (myclass.test(classes)) retnode.push(elem[i]); } return retnode; }; } }; /** * Далее следует код из https://github.com/marcj/css-element-queries * Код модифицирован под наши нужды, но требует указания лицензии */ /*! Copyright (c) 2013 Marc J. Schmidt Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. */ self.ElementQueries = function() { /** * @param {HTMLElement} element * @constructor */ function SetupInformation(element) { this.element = element; this.options = {}; var key, option, width = 0, height = 0, value, actualValue, attrValues, attrValue, attrName; /** * @param {Object} option {mode: 'min|max', property: 'width|height', value: '123px'} */ this.addOption = function(option) { var idx = [option.mode, option.property, option.value].join(','); this.options[idx] = option; }; var attributes = ['min-width', 'min-height', 'max-width', 'max-height']; /** * Extracts the computed width/height and sets to min/max- attribute. */ this.call = function() { width = this.element.offsetWidth; height = this.element.offsetHeight; attrValues = {}; for (key in this.options) { if (!this.options.hasOwnProperty(key)){ continue; } option = this.options[key]; value = parseFloat(option.value); actualValue = option.property == 'width' ? width : height; attrName = option.mode + '-' + option.property; attrValue = ''; if (option.mode == 'min' && actualValue >= value) { attrValue += option.value; } if (option.mode == 'max' && actualValue <= value) { attrValue += option.value; } if (!attrValues[attrName]) attrValues[attrName] = ''; if (attrValue && -1 === (' '+attrValues[attrName]+' ').indexOf(' ' + attrValue + ' ')) { attrValues[attrName] += ' ' + attrValue; } } for (var k in attributes) { if (attrValues[attributes[k]]) { this.element.setAttribute(attributes[k], attrValues[attributes[k]].substr(1)); } else { this.element.removeAttribute(attributes[k]); } } }; } /** * @param {HTMLElement} element * @param {Object} options */ function setupElement(element, options) { if (element.elementQueriesSetupInformation) { element.elementQueriesSetupInformation.addOption(options); } else { element.elementQueriesSetupInformation = new SetupInformation(element); element.elementQueriesSetupInformation.addOption(options); element.elementQueriesSensor = new self.ResizeSensor(element, function() { element.elementQueriesSetupInformation.call(); }); } element.elementQueriesSetupInformation.call(); } /** * @param {String} selector * @param {String} mode min|max * @param {String} property width|height * @param {String} value */ function queueQuery(selector, mode, property, value) { var query; if (self.root.querySelectorAll && self.root.querySelectorAll.bind) query = self.root.querySelectorAll.bind(self.root); if (!query) { return; } var elements = query(selector); for (var i = 0, j = elements.length; i < j; i++) { setupElement(elements[i], { mode: mode, property: property, value: value }); } } var regex = /,?([^,\n]*)\[[\s\t]*(min|max)-(width|height)[\s\t]*[~$\^]?=[\s\t]*"([^"]*)"[\s\t]*]([^\n\s\{]*)/mgi; /** * @param {String} css */ function extractQuery(css) { var match; css = css.replace(/'/g, '"'); while (null !== (match = regex.exec(css))) { if (5 < match.length) { queueQuery(match[1] || match[5], match[2], match[3], match[4]); } } } /** * @param {CssRule[]|String} rules */ function readRules(rules) { var selector = ''; if (!rules) { return; } if ('string' === typeof rules) { rules = rules.toLowerCase(); if (-1 !== rules.indexOf('min-width') || -1 !== rules.indexOf('max-width')) { extractQuery(rules); } } else { for (var i = 0, j = rules.length; i < j; i++) { if (1 === rules[i].type) { selector = rules[i].selectorText || rules[i].cssText; if (-1 !== selector.indexOf('min-height') || -1 !== selector.indexOf('max-height')) { extractQuery(selector); }else if(-1 !== selector.indexOf('min-width') || -1 !== selector.indexOf('max-width')) { extractQuery(selector); } } else if (4 === rules[i].type) { readRules(rules[i].cssRules || rules[i].rules); } } } } /** * Searches all css rules and setups the event listener to all elements with element query rules.. */ this.init = function() { for (var i = 0, j = self.KX.document.styleSheets.length; i < j; i++) { readRules(self.KX.document.styleSheets[i].cssText || self.KX.document.styleSheets[i].cssRules || self.KX.document.styleSheets[i].rules); } }; this.update = function() { this.init(); }; }; self.ElementQueries.update = function() { self.ElementQueries.instance.update(); }; self.ElementQueries.init = function() { if (!self.ElementQueries.instance) { self.ElementQueries.instance = new self.ElementQueries(); } self.ElementQueries.instance.init(); }; self.initElementQueries = function() { self.addEvent(self.KX, "load", function() { self.ElementQueries.init(); }); }; self.ResizeSensor = function(element, callback) { /** * * @constructor */ function EventQueue() { this.q = []; this.add = function(ev) { this.q.push(ev); }; var i, j; this.call = function() { for (i = 0, j = this.q.length; i < j; i++) { this.q[i].call(); } }; } /** * @param {HTMLElement} element * @param {String} prop * @returns {String|Number} */ function getComputedStyle(element, prop) { if (element.currentStyle) { return element.currentStyle[prop]; } else if (self.KX.getComputedStyle) { return self.KX.getComputedStyle(element, null).getPropertyValue(prop); } else { return element.style[prop]; } } /** * * @param {HTMLElement} element * @param {Function} resized */ function attachResizeEvent(element, resized) { if (!element.resizedAttached) { element.resizedAttached = new EventQueue(); element.resizedAttached.add(resized); } else if (element.resizedAttached) { element.resizedAttached.add(resized); return; } element.resizeSensor = self.KX.document.createElement('div'); element.resizeSensor.className = 'resize-sensor'; var style = 'position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: scroll; z-index: -1; visibility: hidden;'; var styleChild = 'position: absolute; left: 0; top: 0;'; element.resizeSensor.style.cssText = style; element.resizeSensor.innerHTML = '<div class="resize-sensor-expand" style="' + style + '">' + '<div style="' + styleChild + '"></div>' + '</div>' + '<div class="resize-sensor-shrink" style="' + style + '">' + '<div style="' + styleChild + ' width: 200%; height: 200%"></div>' + '</div>'; element.appendChild(element.resizeSensor); if (!{fixed: 1, absolute: 1}[getComputedStyle(element, 'position')]) { element.style.position = 'relative'; } var expand = element.resizeSensor.childNodes[0]; var expandChild = expand.childNodes[0]; var shrink = element.resizeSensor.childNodes[1]; var lastWidth, lastHeight; var reset = function() { expandChild.style.width = expand.offsetWidth + 10 + 'px'; expandChild.style.height = expand.offsetHeight + 10 + 'px'; expand.scrollLeft = expand.scrollWidth; expand.scrollTop = expand.scrollHeight; shrink.scrollLeft = shrink.scrollWidth; shrink.scrollTop = shrink.scrollHeight; lastWidth = element.offsetWidth; lastHeight = element.offsetHeight; }; reset(); var changed = function() { if (element.resizedAttached) { element.resizedAttached.call(); } }; self.addEvent(expand, 'scroll', function() { if (element.offsetWidth > lastWidth || element.offsetHeight > lastHeight) { changed(); } reset(); }); self.addEvent(shrink, 'scroll',function() { if (element.offsetWidth < lastWidth || element.offsetHeight < lastHeight) { changed(); } reset(); }); } if ("[object Array]" === Object.prototype.toString.call(element) || ('undefined' !== typeof jQuery && element instanceof jQuery) || ('undefined' !== typeof Elements && element instanceof Elements) ) { var i = 0, j = element.length; for (; i < j; i++) { attachResizeEvent(element[i], callback); } } else { attachResizeEvent(element, callback); } }; }; MarketGidCResponsiveBlock12903.call(MarketGidInfC12903); MarketGidCDiscountBlock12903 = function() { this.RO.push("VC"); this.HG = function(event) { MarketGidInfC12903.helpIE(this); var pricesold = this.getElementsByClassName('mcpriceold3816'); var prices = this.getElementsByClassName('mcprice3816'); var discounts = this.getElementsByClassName('mcdiscount3816'); if (pricesold.length > 0) { pricesold[0].style.display = 'none'; prices.length > 1 ? prices[1].style.display = 'none' : null; discounts.length > 0 ? discounts[0].style.display = 'inline' : null; } }; this.QS = function(event) { MarketGidInfC12903.helpIE(this); var discounts = this.getElementsByClassName('mcdiscount3816'); var prices = this.getElementsByClassName('mcprice3816'); var pricesold = this.getElementsByClassName('mcpriceold3816'); if (pricesold.length > 0) { discounts.length > 0 ? discounts[0].style.display = 'none' : null; prices.length > 1 ? prices[1].style.display = 'inline' : null; pricesold[0].style.display = 'inline'; } }; this.VC = function() { if (this.root) { this.helpIE(this.root); var teasers = this.root.getElementsByClassName('mcteaser3816'); } for (var MG_t in teasers) { teasers[MG_t].onmouseout = this.QS; teasers[MG_t].onmouseover = this.HG; } }; this.helpIE = function(el) { if (el.getElementsByClassName == undefined) { el.getElementsByClassName = function(cl) { var retnode = []; var myclass = new RegExp('\\b'+cl+'\\b'); var elem = this.getElementsByTagName('*'); for (var i = 0; i < elem.length; i++) { var classes = elem[i].className; if (myclass.test(classes)) retnode.push(elem[i]); } return retnode; }; } }; }; MarketGidCDiscountBlock12903.call(MarketGidInfC12903); MarketGidCCountersBlock12903 = function() { this.SK.push("BG"); this.BG = function() { }; }; MarketGidCCountersBlock12903.call(MarketGidInfC12903); MarketGidCAdvertLinkBlock12903 = function() { this.ZC.push("refreshAdvertLink"); this.SK.push("loadAdvertLink"); this.advertLinkNeeded = true; this.loadAdvertLink = function() { if (this.KX.document.getElementById('mg_add12903')) this.advertLinkNeeded = true; else this.advertLinkNeeded = false; }; this.refreshAdvertLink = function() { if (this.advertLinkNeeded) { try { var adLinkBlock = this.QVsAdLinkBlocks[MarketGidInfC12903.KY].replace(/%id/g, '12903'); adLinkBlock = adLinkBlock.replace("%WIDGET_TITLE%", this.KX.MGWidgetTitle12903 ? this.KX.MGWidgetTitle12903 : ""); var utm = ''; if (utm == '') { utm = this.QVsUtm[MarketGidInfC12903.KY]; } this.UN = adLinkBlock.replace(/%utm/, utm); } catch (e) { }; } else { this.UN = ''; } }; }; MarketGidCAdvertLinkBlock12903.call(MarketGidInfC12903); MarketGidCMonitorBlock12903 = function() { this.RO.push("monitorInit"); this.shownBlocks = {}; this.monitorInterval = null; this.monitorInit = function() { var regex = /\/\/img.*\/[\d]+\/([\d]+).*\.(jpg|gif)/; if (!this.monitorInterval) { this.monitorInterval = MarketGidInfC12903.KX.setInterval(function() { var newBlocks = {}; var images = MarketGidInfC12903.root.getElementsByTagName('IMG'); for (var i = 0; i < images.length; i++) { if (MarketGidInfC12903.isElementInViewport(images[i])) { var res = regex.exec(images[i].src); if (res && res[1] && !MarketGidInfC12903.shownBlocks[res[1]]) { MarketGidInfC12903.shownBlocks[res[1]] = 1; newBlocks[res[1]] = 1; } } } MarketGidInfC12903.prepareCappingData(newBlocks); }, 1000); } }; this.prepareCappingData = function(blocks) { var prefix = MarketGidInfC12903.PR == 'news' ? "N" : "G"; var data = ""; var counter = 0; for (var i in blocks) { data += MarketGidInfC12903.teaserHashes[i]; counter++; if (counter > 20) { MarketGidInfC12903.sendCappingData(prefix + data); data = ""; counter = 0; } } if (data!="") MarketGidInfC12903.sendCappingData(prefix + data); }; this.sendCappingData = function(data) { var img = document.createElement('IMG'); img.src = "//c.mgid.com/c?p=" + data; }; this.isElementInViewport = function(el) { var rect = el.getBoundingClientRect(); return ( rect.top >= 0 && rect.left >= 0 && rect.bottom <= (MarketGidInfC12903.KX.innerHeight || MarketGidInfC12903.KX.document.documentElement.clientHeight) && rect.right <= (MarketGidInfC12903.KX.innerWidth || MarketGidInfC12903.KX.document.documentElement.clientWidth) ); }; }; MarketGidCMonitorBlock12903.call(MarketGidInfC12903); MarketGidInfC12903.init(); MarketGidInfC12903.start(); } 